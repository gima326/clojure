==========================

How to use clojure-x.x.x.jar 

==========================

いつもは Leiningen のお世話になりっぱなし。
そこで、いまいちど Clojure の基本に立ち返ってみよう、とこのようなメモにまとめました。
clojure-x.x.x.jar をダウンロードして利用するまでの手順をメモしました。

今回は「clojure-1.10.3.jar」を例に。
利用するには依存する他の .jar ファイルが必要になる。
…で、それってどんなものだろう？

・「clojure-1.10.3.pom」で確認するみたい。

　[ https://repo1.maven.org/maven2/org/clojure/clojure/1.10.3/clojure-1.10.3.pom ]

　　<dependencies>　〜　</dependencies>にいくつか記載されている。

　端折って書き出すとこんな感じ。
　
　　<artifactId>spec.alpha</artifactId>　　　　<version>0.2.194</version>
　　<artifactId>core.specs.alpha</artifactId> <version>0.2.56</version>

　　<artifactId>test.generative</artifactId>　<version>0.5.2</version>
　　<artifactId>test.check</artifactId>　　　　<version>0.9.0</version>
　　<artifactId>jaxws-api</artifactId>        <version>2.3.0</version>

　repl 起動するのに、上記のすべてをそろえる必要はないみたい。


・便利なサイトもある。

　[ https://jar-download.com/artifacts/org.clojure/clojure/1.10.3 ]

　以下の３つの jar をまとめた zip ファイルを提供してくれる。
　また、バージョンの数字なども上記 pom とも一致しているので、正しそう。

　　・「clojure-1.10.3.jar」
　　・「core.specs.alpha-0.2.56.jar」
　　・「spec.alpha-0.2.194.jar」


==========================

[ 作業前の状態 ]

hw
├── build
│   └── classes
├── clojure-1.10.3.jar
├── core.specs.alpha-0.2.56.jar
├── spec.alpha-0.2.194.jar
└── src
    └── hw
        └── core.clj

--------------------------

[ src/hw/core.clj ]

(ns hw.core
  (:gen-class))

(defn foo
  "I don't do a whole lot."
  [x]
  (println x "Hello, World!"))

(defn -main [& args]
  (println "Hello, world!!"))

==========================

・repl 実行
bash-3.2$ java -cp ./clojure-1.10.3.jar:./spec.alpha-0.2.194.jar:./core.specs.alpha-0.2.56.jar:./src clojure.main

　-> ちゃんと ./src を記載しないと require できないので注意。


・コンパイルを実行するための準備　その１
user=> (require 'hw.core)
nil


・コンパイルを実行するための準備　その２（出力先のパスを変更する）
user=> *compile-path*
"classes"
user=> (set! *compile-path* "build/classes")
"build/classes"


・repl 環境でコンパイル
user=> (compile 'hw.core)
hw.core


・生成された class ファイルの実行
bash-3.2$ java -cp ./build/classes:./clojure-1.10.3.jar:./spec.alpha-0.2.194.jar:./core.specs.alpha-0.2.56.jar hw.core
Hello, world!!


・jar ファイルの生成　その１　[ hw.jar ]
bash-3.2$ jar cfe hw.jar hw.core build/classes

bash-3.2$ jar tf hw.jar
META-INF/
META-INF/MANIFEST.MF
build/classes/
build/classes/.DS_Store
build/classes/hw/
build/classes/hw/.DS_Store
build/classes/hw/core$fn__156.class
build/classes/hw/core$foo.class
build/classes/hw/core$loading__6737__auto____154.class
build/classes/hw/core__init.class
build/classes/hw/core.class
build/classes/hw/core$_main.class

　-> パスに build/classes が含まれている


・MANIFEST.MF を確認
bash-3.2$ jar xf hw.jar META-INF/MANIFEST.MF
bash-3.2$ cat META-INF/MANIFEST.MF
Manifest-Version: 1.0
Created-By: 13.0.1 (Oracle Corporation)
Main-Class: hw.core


・jar ファイルの生成　その２　[ hw2.jar ]
bash-3.2$ jar cmf META-INF/MANIFEST.MF hw2.jar -C build/classes hw

bash-3.2$ jar tf hw2.jar
META-INF/
META-INF/MANIFEST.MF
hw/
hw/.DS_Store
hw/core$fn__156.class
hw/core$foo.class
hw/core$loading__6737__auto____154.class
hw/core__init.class
hw/core.class
hw/core$_main.class

　-> パスに build/classes/ が含まれていない。
　-> classesフォルダを含まない形でパッケージングする必要がある。


・jar ファイルの実行　その１ [ hw.jar ]

bash-3.2$ java -cp ./clojure-1.10.3.jar:./spec.alpha-0.2.194.jar:./core.specs.alpha-0.2.56.jar:./hw.jar hw.core
エラー: メイン・クラスhw.coreを検出およびロードできませんでした
原因: java.lang.ClassNotFoundException: hw.core


・jar ファイルの実行　その２ [ hw2.jar ：依存関係を含めない場合 ]

bash-3.2$ java -cp ./clojure-1.10.3.jar:./hw2.jar hw.core

　-> わんさかエラーが出る。


・jar ファイルの実行　その３ [ hw2.jar ]

bash-3.2$ java -cp ./clojure-1.10.3.jar:./spec.alpha-0.2.194.jar:./core.specs.alpha-0.2.56.jar:./hw2.jar hw.core
Hello, world!!


====================

　〜ポイント〜

１．パス指定に ~classes/ を含めないでパッケージングする必要がある。 
２．上記「１」を実現するには、.mf ファイルを手書きするか、別途調達する必要がある。
３．依存関係を含めたうえで実行する必要がある。

４．実行できた。…けど、命令が長すぎるよ！

====================

・jar ファイル生成　その３　[ hw3.jar：実行時の命令をシンプルにしたい。 ]

・MANIFEST.MF を変更
　依存する .jar を「Class-Path」で指定する。
　その指定方法でハマっていた。相対パスは hw3.jar 生成処理を実行する場所を基準にする。
　依存する .jar ファイルは、半角スペース文字で区切る。

bash-3.2$ cat ./META-INF/MANIFEST.MF
Manifest-Version: 1.0
Created-By: 13.0.1 (Oracle Corporation)
Main-Class: hw.core
Class-Path: ./clojure-1.10.3.jar ./spec.alpha-0.2.194.jar ./core.specs.alpha-0.2.56.jar

bash-3.2$ jar cmf ./META-INF/MANIFEST.MF hw3.jar -C ./build/classes hw


・jar ファイルの実行　その４ [ hw3.jar ]

bash-3.2$ java -jar ./hw3.jar 
Hello, world!!

==========================

[ 作業後の状態 ]

hw
├── META-INF
│   └── MANIFEST.MF
├── build
│   └── classes
│       └── hw
│           ├── core$_main.class
│           ├── core$fn__156.class
│           ├── core$foo.class
│           ├── core$loading__6737__auto____154.class
│           ├── core.class
│           └── core__init.class
├── clojure-1.10.3.jar
├── core.specs.alpha-0.2.56.jar
├── hw.jar
├── hw2.jar
├── hw3.jar
├── spec.alpha-0.2.194.jar
└── src
    └── hw
        └── core.clj

==========================